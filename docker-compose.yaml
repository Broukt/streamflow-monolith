services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_dbs &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      AUTH_DB_HOST: ${AUTH_DB_HOST:-auth-db}
      AUTH_DB_PORT: ${AUTH_DB_INTERNAL_PORT:-5432}
      AUTH_DB_NAME: ${AUTH_DB_NAME:-auth}
      AUTH_DB_USER: ${AUTH_DB_USER:-user}
      AUTH_DB_PASSWORD: ${AUTH_DB_PASSWORD:-password}
      USERS_DB_HOST: ${USERS_DB_HOST:-users-db}
      USERS_DB_PORT: ${USERS_DB_INTERNAL_PORT:-3306}
      USERS_DB_NAME: ${USERS_DB_NAME:-users}
      USERS_DB_USER: ${USERS_DB_USER:-user}
      USERS_DB_PASSWORD: ${USERS_DB_PASSWORD:-password}
      VIDEOS_DB_HOST: ${VIDEOS_DB_HOST:-videos-db}
      VIDEOS_DB_PORT: ${VIDEOS_DB_INTERNAL_PORT:-27017}
      VIDEOS_DB_NAME: ${VIDEOS_DB_NAME:-videos}
      VIDEOS_DB_USER: ${VIDEOS_DB_USER:-user}
      VIDEOS_DB_PASSWORD: ${VIDEOS_DB_PASSWORD:-password}
      BILLING_DB_HOST: ${BILLING_DB_HOST:-billing-db}
      BILLING_DB_PORT: ${BILLING_DB_INTERNAL_PORT:-3306}
      BILLING_DB_NAME: ${BILLING_DB_NAME:-billing}
      BILLING_DB_USER: ${BILLING_DB_USER:-user}
      BILLING_DB_PASSWORD: ${BILLING_DB_PASSWORD:-password}
    depends_on:
      auth-db:
        condition: service_healthy
      users-db:
        condition: service_healthy
      videos-db:
        condition: service_healthy
      billing-db:
        condition: service_healthy

  auth-db:
    image: postgres:17-alpine
    container_name: postgres-auth-db
    restart: always
    ports:
      - "${AUTH_DB_EXTERNAL_PORT:-5432}:${AUTH_DB_INTERNAL_PORT:-5432}"
    environment:
      POSTGRES_USER: ${AUTH_DB_USER:-user}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD:-password}
      POSTGRES_DB: ${AUTH_DB_NAME:-auth}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${AUTH_DB_USER:-user} -d ${AUTH_DB_NAME:-auth} -q",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgresdata:/var/lib/postgresql/data

  users-db:
    image: mysql:8.0.29
    container_name: mysql-users-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${USERS_DB_PASSWORD:-password}
      MYSQL_DATABASE: ${USERS_DB_NAME:-users}
      MYSQL_USER: ${USERS_DB_USER:-user}
      MYSQL_PASSWORD: ${USERS_DB_PASSWORD:-password}
    ports:
      - "${USERS_DB_EXTERNAL_PORT:-3306}:${USERS_DB_INTERNAL_PORT:-3306}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h localhost -u root -p${USERS_DB_PASSWORD:-password} || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysqldata:/var/lib/mysql

  videos-db:
    image: mongo:8.0.13
    container_name: mongo-videos-db
    restart: always
    ports:
      - "${VIDEOS_DB_EXTERNAL_PORT:-27017}:${VIDEOS_DB_INTERNAL_PORT:-27017}"
    volumes:
      - mongodbdata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${VIDEOS_DB_USER:-user}
      MONGO_INITDB_ROOT_PASSWORD: ${VIDEOS_DB_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${VIDEOS_DB_NAME:-videos}
    healthcheck:
      test:
        - CMD-SHELL
        - >
          mongosh --quiet --username ${VIDEOS_DB_USER:-user} --password ${VIDEOS_DB_PASSWORD:-password}
          --authenticationDatabase admin --eval "db.adminCommand('ping')" || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  billing-db:
    image: mariadb:10.7.4
    container_name: mariadb-billing-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${BILLING_DB_PASSWORD:-password}
      MYSQL_DATABASE: ${BILLING_DB_NAME:-billing}
      MYSQL_USER: ${BILLING_DB_USER:-user}
      MYSQL_PASSWORD: ${BILLING_DB_PASSWORD:-password}
    ports:
      - "${BILLING_DB_EXTERNAL_PORT:-3307}:${BILLING_DB_INTERNAL_PORT:-3306}"
    volumes:
      - mariadbdata:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h localhost -u root -p${BILLING_DB_PASSWORD:-password} || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgresdata:
  mysqldata:
  mongodbdata:
  mariadbdata:
